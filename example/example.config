# *****
# *****  The identifier of the application instance
# *****  (eg., could be the server name).
# *****  (optional, default = "")
# *****
cwm.instanceId           = example


# *****
# *****  The length of time before a user session is timed out in seconds
# *****  (optional, default = 5400, which is 90min)
# *****
cwm.sessionTimeout		 = 5400


# *****
# *****  The directory and name of the Hibernate configuration file.
# *****  (required)
# *****
cwm.hibernateConfig      = /opt/example/example-hibernate.xml


# *****
# *****  The name of the mail server and address if mail is used.
# *****  If email is turned on, email.xml is needed in
# *****	 the content directory.  Email must be turned on for self registration.
# *****  app.url is needed to create links sent out via email.
# *****  (optional, Required only when mail is used - default email state is off)
# *****
cwm.mailHost            = smtp.example.org
cwm.mailFromAddress     = admin@example.org
app.url               	= http://localhost:8080/example
isi.email.isOn 		= false


# *****
# *****  If true, anyone can come to the application and sign up for their own account.
# *****  Requires: 
# *****    * email is on and properly configured.
# *****    * default period (class) is specified - users are created there
# *****
isi.selfRegister.isOn = false
isi.defaultPeriod = test


# *****
# *****  The directory and name of the logging configuration file.
# *****  (optional, default is logback's default)
# *****
cwm.logConfig            = /opt/example/example-logback.xml


# *****  
# ***** The value of the admin user/password - needed to start the application.
# *****  (optional, The default administrator will be created if this is not provided.)
# ***** 
#cwm.adminUsername 	=
#cwm.adminPassword 	= 
#cwm.adminEmail		=


# *****
# *****  The theme directory; location of html, css, image, js, and application property files.
# *****  (required)
# *****
isi.skinDir              = /opt/example/theme


# *****
# *****  The directory for the transformation files (dtbook2xhtml.xsl, common.xsl, etc.) normally the same as skinDir
# *****  or the customSkinDir
# *****  (optional; uncomment to set)
# *****
#isi.transformationDir   = /opt/example/theme


# ****
# ****   A custom theme directory can override anything in the standard
# ****   theme directory.  Files must be at the same relative path:
# ****   so for example to override the settings in:
# ****     theme/org/cast/example/ExampleApplication.properties 
# ****   you would create
# ****     customtheme/org/cast/example/ExampleApplication.properties
# ****   (optional; uncomment to set)
# isi.customSkinDir        = /opt/example/customTheme


# *****
# *****  The directory for custom transformation xsl template files 
# *****  (optional; uncomment to set)
# *****
#isi.customTransformationDir   = /opt/example/customTheme


# *****
# *****  The name of the xsl template files.  Uncomment and change if you want a file other than the default.
# *****  (optional; uncomment to use a custom version of one or more of these files)
# *****
#isi.xslGlossaryFile	= glossary.xsl
#isi.xslStudentFile	= student.xsl
#isi.xslTocFile		= toc.xsl
#isi.xslEmailFile	= email.xsl


# *****
# *****  The WebDAV server information, needed only if you are storing your
# *****  content files on a webDAV server.
# *****  (optional, default is to find files on the local filesystem)
# *****
#isi.davServer           = dav.example.org
#isi.davUser             = davuser
#isi.davPassword         = davpassword


# *****
# *****  The directory of the content files (xml, image, video, etc.) 
# *****  on either the local filesystem or webDAV server.
# *****  (required)
# *****
isi.contentDir           = /opt/example/content


# *****
# *****  A comma separated list of the xml content files found
# *****  in the content directory.  At least one file is required.
# *****  (required)
# *****
isi.studentContentFiles  = features.xml, demo.xml


# *****
# *****  The name of the glossary xml file located in the content directory.
# *****  (optional, no default)
# *****
isi.glossaryFile         = glossary.xml


# *****
# *****  Full path to a CSV file containing user accounts to create when the
# *****  server is started.
# *****  (optional, default is to create only an "admin" account)
# *****
cwm.defaultUserFile = /Users/lynnmccormack/Documents/project/dynabook/dbcsvfiles/testUserwithsite.csv


# *****
# *****  The top nav bar for reading pages, if not using the default.
# *****  (optional, valid value = alternate1)
# *****
#isi.navBarType           = alternate1


# *****
# *****  Indicate which level of structure in the content files represents a 
# *****  "section", and which level represents a "page".  Only level2/level3 and 
# *****  level3/level4 are supported.
# *****  (optional, default is level3/level4  )
# *****
isi.sectionElement      = level3
isi.pageElement         = level4


# *****
# *****  The following are used to turn on/off page numbers on the home (table of contents) page
# *****  (optional, default is true)
# *****
isi.pageNumbers.isOn        = true


# *****
# *****  The following are used to turn off the whiteboard feature. Responses
# *****  may not be added to the whiteboard and the whiteboard button will 
# *****  not be visible when this is false.
# *****  (optional, default is true)
# *****
isi.notebook.isOn           = true


# *****
# *****  The following are used to turn off features in the application.  
# *****  (optional, default is true)
# *****
isi.whiteboard.isOn         = true


# *****
# *****  The following are used to turn on/off the My Model/My Collections
# *****  (the gathered and grouped responses) feature.  The My Collections
# *****  will be invisible if this is false.  
# *****  (optional, default is true)
# *****
isi.responseCollection.isOn = true


# *****
# *****  The following are used to turn on/off the class message panel that
# *****  is visible to students on the table of contents page. 
# *****  (optional, default is true)
# *****
isi.classMessage.isOn       = true


# *****
# *****  The following are used to turn on/off the page notes or margin notes
# *****  that are on the right hand panel of the reading page.  
# *****  (optional, default is true)
# *****
isi.pageNotes.isOn          = true


# *****
# *****  The following are used to turn on/off the ability to add questions
# *****  on the reading page.  The My Questions tab will also be invisible
# *****  if this is false.  
# *****  (optional, default is true)
# *****
isi.myQuestion.isOn         = true


# *****
# *****  The following are used to turn on/off the tag panel from displaying
# *****  on the table of content and the reading pages.  
# *****  (optional, default is true)
# *****
isi.tag.isOn                = true


# *****
# *****  MathML is present in the authored content.  
# *****  (optional, default = false)
# *****
isi.mathML.isOn 	        = false


# *****
# *****  Enable section complete icons in the student TOC.  
# *****  (optional, default = false)
# *****
isi.tocSectionCompleteIcons.isOn  = false


# *****
# *****  Enable section incomplete icons in the student TOC.  
# *****  (optional, default = false)
# *****
isi.tocSectionIncompleteIcons.isOn  = false


# *****
# *****  Enable section complete toggle links in the student TOC.  
# *****  (optional, default = true)
# *****
# *****  Note: As currently implemented, this will not show the TOC toggles unless
# *****        isi.sectionToggleImageLinks.isOn is also set true.
# *****
isi.tocSectionToggles.isOn  = false


# *****
# *****  Enable section complete toggle links on the last page of a section.  
# *****  (optional, default = false)
# *****
isi.sectionToggleTextLinks.isOn = false


# *****
# *****  Enable section complete toggle checkmarks.  
# *****  (optional, default = true)
# *****
isi.sectionToggleImageLinks.isOn = true


# *****
# *****  Types of icons displayed in the nav bar on the content page.  Use status if
# *****  the teacher wants to see the student status (complete) or class if the 
# *****  teacher wants to see the authored icons.  
# *****  (optional, default = status)
# *****
#isi.navbar.sectionIcons.teacher = status


# *****
# *****  Types of icons displayed in the nav bar on the content page.  Use status if
# *****  the students should see their status (complete) or class to enable students 
# *****  to see the authored icons.  
# *****  (optional, default = class)
# *****
#isi.navbar.sectionIcons.student = class


# *****
# *****  Display a summary of responses on the response collection page.
# *****  (optional, default = false)
#isi.collectionsScoreSummary.isOn = false


# *****
# *****  Display a summary of responses for the teacher when viewing the results
# *****  on the compare responses page.
# *****  (optional, default = false)
#isi.compareScoreSummary.isOn = false


# *****
# *****  Glossary is on by default;  Setting the glossary to false will hide the
# *****  glossary button.  No glossary words will be indicated on the reading pages.
# *****
# *****  Clicking a glossary word can either show a short definition inline,
# *****  open a "mini-glossary" modal dialog, or directly open the full glossary
# *****  popup window.  Glossary must be turned on for the type to be determined.
# *****  (optional, default = modal)
# *****
isi.glossary.isOn  = true
#isi.glossary.type = modal
#isi.glossary.type = inline
#isi.glossary.type = main


# *****
# *****  The highlight feature is on by default;  Setting the isi.highlightsPanel.isOn to false will hide the
# *****  highlight panel from the reading pages.
# *****
# *****  Setup the highlighters for the app.  The default is that all 3 highlighters are turned on.
# *****  The label of the green highlighter is editable by default.
# *****	 All three highlighters have a default label in the properties file when their names are
# *****  not edible.
# *****
isi.highlightsPanel.isOn    = true
#isi.highlighter.yellow.isOn = true
#isi.highlighter.yellow.nameEditable = false
#isi.highlighter.blue.isOn = true
#isi.highlighter.blue.nameEditable = false
#isi.highlighter.green.isOn = true
#isi.highlighter.green.nameEditable = true


# *****
# *****  isi.defaultResponse.type is the default list of responses used throughout the application.  
# *****  These are the types of responses the user has available on the MyQuestions,
# *****  Questions popup, notebook, Teacher notes popup and the user created glossary words.
# *****
# *****  useAuthoredResponseType is set to true when you want to have the author specify the response types when authoring
# *****  both the content pages and also the glossary responses.
# *****  Setting this value to false will have all authored response types set to the default responses specified
# *****  in the defaultResponse.type.  The default value is false for backwards compatibility.
# *****
#isi.defaultResponse.type = text, image, audio, file, table
#isi.useAuthoredResponseType.isOn = true  


# *****
# *****  isi.response.sortField is the field in the response that should be used for sorting a list of responses.
# *****  Recommended values would be "createDate" or "lastUpdated"
# *****  isi.response.sort is whether the sort should be ascending (first to last) or descending (last to first) or none.
# *****  The default value is to sort the responses by the create date with the most recent response at the top of the list.
# *****
#isi.response.sortField = createDate
#isi.response.sort = DESCENDING


# *****  
# *****  A comma separated list of tags that all users will see, in addition
# *****  to any tags that they create.  These can be used to tag pages
# *****  with a single click.
# *****  (optional, default = no default tags)
# *****  
isi.defaultTags = *, **, ***, ****


# *****
# ***** Whether the toolbar is visible.  If set to true, wordnik should also be set up; 
# ***** (optional, default = true)
# *****  
isi.toolBar.isOn            = true


# *****
# ***** The API key if you are using wordnik for your dictionary.
# ***** (optional, no default)
# isi.wordnikApiKey = [your key here]